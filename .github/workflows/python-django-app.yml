# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Lint & Test BeginToReason2

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pylint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Lint with pylint
        run: |
          pylint --load-plugins pylint_django --django-settings-module=begintoreason_django.settings accounts/ core/ data_analysis/ educator/ think_aloud/ tutor/
  build:
    runs-on: ubuntu-latest
    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy2 and pypy3
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Create .env for testing
        run: |
          touch .env
          SECRET_KEY=$(python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')
          echo DJANGO_SETTINGS_MODULE="begintoreason_django.settings.development" >> .env
          echo ALLOWED_HOSTS="" >> .env
          echo SECRET_KEY="$SECRET_KEY" >> .env
          echo SECRET_ADMIN_URL="" >> .env
          echo SOCIAL_AUTH_GOOGLE_OAUTH2_KEY="" >> .env
          echo SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET="" >> .env
      - name: Test with pytest
        run: |
          python manage.py makemigrations accounts core data_analysis educator think_aloud tutor
          python manage.py migrate
          python manage.py test accounts core data_analysis educator think_aloud tutor
